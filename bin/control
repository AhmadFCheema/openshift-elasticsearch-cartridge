#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

PID_FILE=$OPENSHIFT_ELASTICSEARCH_DIR/run/elasticsearch.pid

function _is_running() {
  if [ -f $PID_FILE ]; then
    zpid=$(cat $PID_FILE 2> /dev/null)
    myid=$(id -u)
    if `ps -opid,args --pid $zpid 2>&1 &> /dev/null`; then
      return 0
    fi
  fi

  return 1
}

function start() {
  if _is_running; then
    echo "ElasticSearch is already running" 1>&2
    return 0
  fi

  sed -i \
      -e "s/TRANSPORT_TCP_PORT/$OPENSHIFT_ELASTICSEARCH_TRANSPORT_PROXY_PORT/" \
      -e "s/UNICAST_HOSTS/$OPENSHIFT_APP_DNS:$OPENSHIFT_ELASTICSEARCH_TRANSPORT_PROXY_PORT/" \
      $OPENSHIFT_ELASTICSEARCH_DIR/conf/elasticsearch.yml > /dev/null 2>&1

  $OPENSHIFT_ELASTICSEARCH_DIR/usr/bin/elasticsearch -p $PID_FILE
}

function stop() {
  if ! _is_running; then
    echo "ElasticSearch is already stopped" 1>&2
    return 0
  fi

  if [ -f $PID_FILE ]; then
    zpid=$(cat $PID_FILE 2> /dev/null)
  fi

  if [ -n $zpid ]; then
    /bin/kill $zpid
    ret=$?
    if [ $ret -eq 0 ]; then
      TIMEOUT=10
      while [ $TIMEOUT -gt 0 ] &&  _is_running ; do
        /bin/kill -0 "$zpid" > /dev/null 2>&1  ||  break
        sleep 1
        let TIMEOUT=${TIMEOUT}-1
      done
    fi
  fi
}

function restart() {
  stop
  start
}

function status() {
  if output=$(curl http://$OPENSHIFT_RUBY_IP:$OPENSHIFT_RUBY_PORT/ &> /dev/null); then
    client_result "Application is running"
  else
    client_result "Application is either stopped or inaccessible"
  fi
}

case "$1" in
  start)             start ;;
  stop)              stop ;;
  restart | reload ) restart $1 ;;
  status)            status ;;
  *)                 exit 0
esac
